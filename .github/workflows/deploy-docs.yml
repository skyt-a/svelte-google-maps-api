# .github/workflows/deploy-docs.yml

name: Deploy Docs to GitHub Pages

on:
  # Runs on pushes targeting the main branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20 # Or your preferred Node.js version
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10 # Or your preferred pnpm version
      - name: Install dependencies
        run: pnpm install
      - name: Build with SvelteKit
        # Run the build command defined in your package.json
        # Ensure this builds the static site to the 'docs' directory
        run: pnpm run build
        env:
          NODE_ENV: production # Ensure correct base path is used
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the 'docs' directory (or your adapter's output directory)
          path: ./docs

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
